import{_ as s,o as a,c as n,S as e}from"./chunks/framework.8b0da900.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"tool/从 npm 迁移到 pnpm.md","filePath":"tool/从 npm 迁移到 pnpm.md","lastUpdated":1718757101000}'),l={name:"tool/从 npm 迁移到 pnpm.md"},p=e(`<h2 id="安装-pnpm" tabindex="-1">安装 pnpm <a class="header-anchor" href="#安装-pnpm" aria-label="Permalink to &quot;安装 pnpm&quot;">​</a></h2><p><a href="https://pnpm.io/installation" target="_blank" rel="noreferrer">https://pnpm.io/installation</a></p><h2 id="删除-node-modules" tabindex="-1">删除 node_modules <a class="header-anchor" href="#删除-node-modules" aria-label="Permalink to &quot;删除 node_modules&quot;">​</a></h2><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-light"><code><span class="line"><span style="color:#6F42C1;">npx</span><span style="color:#24292E;"> </span><span style="color:#032F62;">npkill</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="添加-preinstall-hook" tabindex="-1">添加 preinstall hook <a class="header-anchor" href="#添加-preinstall-hook" aria-label="Permalink to &quot;添加 preinstall hook&quot;">​</a></h2><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-light has-diff"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;scripts&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line diff add"><span style="color:#24292E;">        </span><span style="color:#005CC5;">&quot;preinstall&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;npx only-allow pnpm&quot;</span><span style="color:#24292E;">,  </span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="可选-创建-pnpm-workspace-yaml-并写入以下内容" tabindex="-1">[可选]创建 pnpm-workspace.yaml 并写入以下内容 <a class="header-anchor" href="#可选-创建-pnpm-workspace-yaml-并写入以下内容" aria-label="Permalink to &quot;[可选]创建 pnpm-workspace.yaml 并写入以下内容&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 这里涉及到一个名为 <code>monorepo</code> 的软件开发策略</li></ul></div><div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-light"><code><span class="line"><span style="color:#22863A;">packages</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;"># include packages in subfolders (change as required)</span></span>
<span class="line"><span style="color:#24292E;">  - </span><span style="color:#032F62;">&#39;apps/**&#39;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;"># all packages in direct subdirs of packages/</span></span>
<span class="line"><span style="color:#24292E;">  - </span><span style="color:#032F62;">&#39;packages/**&#39;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;"># exclude packages that are inside test directories</span></span>
<span class="line"><span style="color:#24292E;">  - </span><span style="color:#032F62;">&#39;!**/test/**&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>将 <code>workspaces</code> 从 <code>package.json</code> 中删除</p><h2 id="可选-使用-pnpm-add-安装依赖有警告" tabindex="-1">[可选]使用 pnpm add 安装依赖有警告 <a class="header-anchor" href="#可选-使用-pnpm-add-安装依赖有警告" aria-label="Permalink to &quot;[可选]使用 pnpm add 安装依赖有警告&quot;">​</a></h2><ol><li>执行 <code>pnpm add</code> 时增加 <code>-w</code> 选项</li></ol><div class="info custom-block"><p class="custom-block-title">INFO</p><p>考虑到某些第三方会自主执行 pnpm add，此时不好控制 cli 选项，所以推荐第二种方案</p><ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 考虑到 <code>monorepo</code>，这里应该不是最优解</li></ul></div><ol start="2"><li>根目录下创建 <code>.npmrc</code> 文件并写入 <code>ignore-workspace-root-check=true</code></li></ol><h2 id="依据-package-lock-json-生成-pnpm-lock-yaml" tabindex="-1">依据 package-lock.json 生成 pnpm-lock.yaml <a class="header-anchor" href="#依据-package-lock-json-生成-pnpm-lock-yaml" aria-label="Permalink to &quot;依据 package-lock.json 生成 pnpm-lock.yaml&quot;">​</a></h2><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-light"><code><span class="line"><span style="color:#6F42C1;">pnpm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">import</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="删除-package-lock-json" tabindex="-1">删除 package-lock.json <a class="header-anchor" href="#删除-package-lock-json" aria-label="Permalink to &quot;删除 package-lock.json&quot;">​</a></h2><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-light"><code><span class="line"><span style="color:#6F42C1;">rm</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-f</span><span style="color:#24292E;"> </span><span style="color:#032F62;">package-lock.json</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="使用-pnpm-安装依赖" tabindex="-1">使用 <code>pnpm</code> 安装依赖 <a class="header-anchor" href="#使用-pnpm-安装依赖" aria-label="Permalink to &quot;使用 \`pnpm\` 安装依赖&quot;">​</a></h2><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-light"><code><span class="line"><span style="color:#6A737D;"># 别名：pnpm i</span></span>
<span class="line"><span style="color:#6F42C1;">pnpm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="将-npm-run-xxx-替换为-pnpm-xxx" tabindex="-1">将 npm run xxx 替换为 pnpm xxx <a class="header-anchor" href="#将-npm-run-xxx-替换为-pnpm-xxx" aria-label="Permalink to &quot;将 npm run xxx 替换为 pnpm xxx&quot;">​</a></h2><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-light has-diff"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;scripts&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line diff remove"><span style="color:#24292E;">        </span><span style="color:#005CC5;">&quot;test&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;npm run test&quot;</span><span style="color:#24292E;">,  </span></span>
<span class="line diff add"><span style="color:#24292E;">        </span><span style="color:#005CC5;">&quot;test&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;pnpm test&quot;</span><span style="color:#24292E;">  </span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="修改-package-json-文件中-engine" tabindex="-1">修改 package.json 文件中 engine <a class="header-anchor" href="#修改-package-json-文件中-engine" aria-label="Permalink to &quot;修改 package.json 文件中 engine&quot;">​</a></h2><ul><li><a href="https://pnpm.io/package_json#engines" target="_blank" rel="noreferrer">https://pnpm.io/package_json#engines</a></li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>本文参考于以下文章：</p><ul><li><a href="https://dev.to/andreychernykh/yarn-npm-to-pnpm-migration-guide-2n04" target="_blank" rel="noreferrer">How to migrate from yarn / npm to pnpm</a></li><li><a href="https://gist.github.com/mmyoji/ea01398a1cbeded5bf1a701711593759" target="_blank" rel="noreferrer">Migrate npm to pnpm</a></li></ul></div>`,25),o=[p];function t(c,r,i,d,m,u){return a(),n("div",null,o)}const y=s(l,[["render",t]]);export{h as __pageData,y as default};
