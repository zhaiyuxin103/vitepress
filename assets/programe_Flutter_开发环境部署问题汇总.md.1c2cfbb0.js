import{_ as s,o as a,c as n,S as e}from"./chunks/framework.8b0da900.js";const l="/vitepress/images/Flutter/开发环境部署问题汇总/question_one_1.png",p="/vitepress/images/Flutter/开发环境部署问题汇总/question_one_2.png",o="/vitepress/images/Flutter/开发环境部署问题汇总/question_one_3.png",r="/vitepress/images/Flutter/开发环境部署问题汇总/question_one_4.png",t="/vitepress/images/Flutter/开发环境部署问题汇总/question_one_5.png",i="/vitepress/images/Flutter/开发环境部署问题汇总/question_one_6.png",c="/vitepress/images/Flutter/开发环境部署问题汇总/question_two_1.png",F=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"programe/Flutter/开发环境部署问题汇总.md","filePath":"programe/Flutter/开发环境部署问题汇总.md","lastUpdated":1672831215000}'),d={name:"programe/Flutter/开发环境部署问题汇总.md"},u=e('<h2 id="虚拟机创建成功之后-android-studio-无法自动检测" tabindex="-1">虚拟机创建成功之后 Android Studio 无法自动检测 <a class="header-anchor" href="#虚拟机创建成功之后-android-studio-无法自动检测" aria-label="Permalink to &quot;虚拟机创建成功之后 Android Studio 无法自动检测&quot;">​</a></h2><h3 id="说明" tabindex="-1">说明 <a class="header-anchor" href="#说明" aria-label="Permalink to &quot;说明&quot;">​</a></h3><p><img src="'+l+'" alt="file"></p><p><img src="'+p+'" alt="file"></p><h3 id="解决方法" tabindex="-1">解决方法 <a class="header-anchor" href="#解决方法" aria-label="Permalink to &quot;解决方法&quot;">​</a></h3><ol><li><p>点击左上角 <code>File</code> 菜单，选择 <code>Project Structure</code></p><p><img src="'+o+'" alt="file"></p></li><li><p>在 <code>Project SDK</code> 下选择 <code>Andriod SDK</code></p><p><img src="'+r+'" alt="file"></p></li><li><p>依次点击右下角的 <code>Apply</code> 和 <code>Ok</code> 按钮确认配置</p><p><img src="'+t+'" alt="file"></p></li><li><p>之后就可以自动检测到你所安装的虚拟机了</p><p><img src="'+i+'" alt="file"></p></li></ol><h2 id="运行-flutter-doctor-提示-no-proxy-is-not-set" tabindex="-1">运行 flutter doctor 提示 NO_PROXY is not set <a class="header-anchor" href="#运行-flutter-doctor-提示-no-proxy-is-not-set" aria-label="Permalink to &quot;运行 flutter doctor 提示 NO_PROXY is not set&quot;">​</a></h2><h3 id="说明-1" tabindex="-1">说明 <a class="header-anchor" href="#说明-1" aria-label="Permalink to &quot;说明&quot;">​</a></h3><p><img src="'+c+`" alt="file"></p><h3 id="解决方法-1" tabindex="-1">解决方法 <a class="header-anchor" href="#解决方法-1" aria-label="Permalink to &quot;解决方法&quot;">​</a></h3><p>将以下信息以 <code>Key-Value</code> 的形式 <a href="/vitepress/other/配置环境变量">加入环境变量</a> 即可解决</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-light"><code><span class="line"><span style="color:#24292e;">NO_PROXY=localhost,127.0.0.1,LOCALHOST</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="运行项目之后长时间卡在-running-gradle-task-assembledebug-以下提供几种思路" tabindex="-1">运行项目之后长时间卡在 Running Gradle task &#39;assembleDebug&#39;，以下提供几种思路 <a class="header-anchor" href="#运行项目之后长时间卡在-running-gradle-task-assembledebug-以下提供几种思路" aria-label="Permalink to &quot;运行项目之后长时间卡在 Running Gradle task &#39;assembleDebug&#39;，以下提供几种思路&quot;">​</a></h2><ol><li><p>修改下载镜像</p><ul><li>打开 Flutter SDK 目录中的 <code>packages\\flutter_tools\\gradle\\flutter.gradle</code> 文件，找到以下代码片段并进行修改</li></ul><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki github-light"><code><span class="line"><span style="color:#24292E;">repositories {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// google()</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// jcenter()</span></span>
<span class="line"><span style="color:#24292E;">    maven { url </span><span style="color:#032F62;">&#39;https://maven.aliyun.com/repository/google&#39;</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">    maven { url </span><span style="color:#032F62;">&#39;https://maven.aliyun.com/repository/jcenter&#39;</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">    maven { url </span><span style="color:#032F62;">&#39;http://maven.aliyun.com/nexus/content/groups/public&#39;</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ul><li>打开 Flutter 项目下的 <code>andriod/build.gradle</code> 文件，找到以下代码片段并进行修改</li></ul><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki github-light"><code><span class="line"><span style="color:#24292E;">buildscript {</span></span>
<span class="line"><span style="color:#24292E;">    ext.kotlin_version </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;1.3.50&#39;</span></span>
<span class="line"><span style="color:#24292E;">    repositories {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// google()</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// jcenter()</span></span>
<span class="line"><span style="color:#24292E;">        maven { url </span><span style="color:#032F62;">&#39;https://maven.aliyun.com/repository/google&#39;</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">        maven { url </span><span style="color:#032F62;">&#39;https://maven.aliyun.com/repository/jcenter&#39;</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">        maven { url </span><span style="color:#032F62;">&#39;http://maven.aliyun.com/nexus/content/groups/public&#39;</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">allprojects {</span></span>
<span class="line"><span style="color:#24292E;">    repositories {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// google()</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// jcenter()</span></span>
<span class="line"><span style="color:#24292E;">        maven { url </span><span style="color:#032F62;">&#39;https://maven.aliyun.com/repository/google&#39;</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">        maven { url </span><span style="color:#032F62;">&#39;https://maven.aliyun.com/repository/jcenter&#39;</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">        maven { url </span><span style="color:#032F62;">&#39;http://maven.aliyun.com/nexus/content/groups/public&#39;</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div></li><li><p>FQ 设置为全局模式，并选择外国节点（不要选香港、台湾等地）</p></li><li><p>找到 <code>Flutter</code> 项目里的 <code>andriod/gradle/wrapper/gradle-wrapper.properties</code> 文件</p><ul><li>将 <code>distributionUrl=https\\://services.gradle.org/distributions/gradle-*.*.*-all.zip</code> 改为 <code>distributionUrl=https\\://services.gradle.org/distributions/gradle-6.4.1-all.zip</code></li></ul></li><li><p>运行报错之后可做以下操作清理缓存，根据上述方案操作之后重新运行项目</p></li></ol><ul><li>删除 <code>C:\\Users\\&lt;username&gt;</code> 目录下的 <code>.gradle</code> 目录</li><li>删除项目中的 <code>andriod/gradle/wrapper/gradle-wrapper.jar</code> 文件</li><li>项目根目录下执行 <code>flutter clean</code></li></ul>`,15),m=[u];function b(g,y,_,h,v,E){return a(),n("div",null,m)}const q=s(d,[["render",b]]);export{F as __pageData,q as default};
